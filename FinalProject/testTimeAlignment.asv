% computing the error presents the challenge of how to align the signals in
% time. 
clc
clear
close all

load('sampledata.mat')
D = dir();


for ii = 1:numel(D)
    if ~contains(D(ii).name, 'AB3')
        continue
    end
    expdata = load(D(ii).name);

    % stshift = 0;
    stshift = expdata.data.spiketimes(3);
    hold on
    plot(expdata.data.spiketimes - stshift, expdata.Sint)
end
yyaxis right
plot(sampledata.t, sampledata.F)

% testing shows subtracting the first spike time in FE, 2nd in AB2, and
% 3rd in AB3 aligns the all the signals at time 0.

%%
for ii = 1:numel(D)
    if ~contains(D(ii).name, 'AB3')
        continue
    end
    expdata = load(D(ii).name);

    st = expdata.data.spiketimes - expdata.data.spiketimes(3);
    st = st(st >= 0);
    Sint = Sint(st >= 0);

    twin = sampledata.t > 0 & sampledata.t < max(st);

    % Sinterp = interp1()

    % stwin = st > 0; % trim initial part
    % subplot(211)
    % hold on
    % plot(expdata.data.spiketimes, expdata.Sint)
    % subplot(212)
    % hold on
    % plot(st, expdata.Sint)
    
    figure
    plot(sampledata.t, sampledata.F)
    hold on
    plot(sampledata.t(twin), sampledata.F(twin))
    yyaxis right
    plot(st, Sint, '.k')
end
yyaxis right
plot(sampledata.t, sampledata.F)